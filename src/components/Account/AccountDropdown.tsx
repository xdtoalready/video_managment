import React, { useState, useRef, useEffect } from 'react';
import { useStore } from '../../store/useStore';
import { Account } from '../../api/sentryshot';
import AccountModal from './AccountModal';

interface AccountDropdownProps {
  isOpen: boolean;
  onClose: () => void;
  triggerRef: React.RefObject<HTMLElement>;
}

const AccountDropdown: React.FC<AccountDropdownProps> = ({ isOpen, onClose, triggerRef }) => {
  const { 
    accounts, 
    username, 
    hasAdminRights, 
    switchAccount, 
    deleteAccount,
    logout 
  } = useStore();

  const dropdownRef = useRef<HTMLDivElement>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const [isAccountModalOpen, setIsAccountModalOpen] = useState(false);
  const [editingAccount, setEditingAccount] = useState<Account | null>(null);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const [switchingToAccount, setSwitchingToAccount] = useState<string | null>(null);
  const [switchPassword, setSwitchPassword] = useState('');
  const [switchError, setSwitchError] = useState<string | null>(null);

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const [position, setPosition] = useState({ 
    top: 0, 
    left: 0, 
    right: undefined as number | undefined 
  });

  useEffect(() => {
    if (isOpen && triggerRef.current && dropdownRef.current) {
      const triggerRect = triggerRef.current.getBoundingClientRect();
      const dropdownRect = dropdownRef.current.getBoundingClientRect();
      const viewportWidth = window.innerWidth;
      const viewportHeight = window.innerHeight;

      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ trigger –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ñ—É—Ç–µ—Ä–µ)
      const isInBottomArea = triggerRect.bottom > viewportHeight * 0.7; // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –≤ –Ω–∏–∂–Ω–∏—Ö 30% —ç–∫—Ä–∞–Ω–∞

      let top: number;
      let left = triggerRect.left;
      let right: number | undefined = undefined;

      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º dropdown —Å–≤–µ—Ä—Ö—É
      if (isInBottomArea) {
        top = triggerRect.top - dropdownRect.height - 8; // 8px –æ—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
        // –ï—Å–ª–∏ –≤—Å—ë —Ä–∞–≤–Ω–æ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Å–≤–µ—Ä—Ö—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤—ã—Å–æ–∫–æ
        if (top < 8) {
          top = 8; // –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø –æ—Ç –≤–µ—Ä—Ö–∞ —ç–∫—Ä–∞–Ω–∞
        }
      } else {
        // –î–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É
        top = triggerRect.top - dropdownRect.height - 8;
        // –ï—Å–ª–∏ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Å–≤–µ—Ä—Ö—É, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–Ω–∏–∑—É
        if (top < 8) {
          top = triggerRect.bottom + 8;
        }
      }

      // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
      if (left + dropdownRect.width > viewportWidth - 16) {
        // –ï—Å–ª–∏ –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è —Å–ø—Ä–∞–≤–∞, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
        right = viewportWidth - triggerRect.right;
        left = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º left –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º right
      }

      setPosition({ top, left, right });
    }
  }, [isOpen, triggerRef]);

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–µ–Ω—é
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (
        isOpen &&
        dropdownRef.current &&
        !dropdownRef.current.contains(event.target as Node) &&
        triggerRef.current &&
        !triggerRef.current.contains(event.target as Node)
      ) {
        onClose();
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, [isOpen, onClose, triggerRef]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleCreateAccount = () => {
    setEditingAccount(null);
    setIsAccountModalOpen(true);
    onClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º dropdown –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleEditAccount = (account: Account) => {
    setEditingAccount(account);
    setIsAccountModalOpen(true);
    onClose(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º dropdown –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleDeleteAccount = async (account: Account) => {
    if (account.username === username) {
      alert('–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç');
      return;
    }

    const confirmDelete = window.confirm(
      `–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç "${account.username}"? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.`
    );

    if (!confirmDelete) return;

    try {
      const success = await deleteAccount(account.id);
      if (success) {
        console.log(`–ê–∫–∫–∞—É–Ω—Ç ${account.username} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω`);
      } else {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞:', error);
      alert(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞');
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
  const handleStartSwitching = (account: Account) => {
    if (account.username === username) {
      return; // –£–∂–µ —Ç–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç
    }

    setSwitchingToAccount(account.username);
    setSwitchPassword('');
    setSwitchError(null);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
  const handleCancelSwitching = () => {
    setSwitchingToAccount(null);
    setSwitchPassword('');
    setSwitchError(null);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
  const handleConfirmSwitch = async () => {
    if (!switchingToAccount || !switchPassword) return;

    try {
      const success = await switchAccount(switchingToAccount, switchPassword);
      
      if (success) {
        setSwitchingToAccount(null);
        setSwitchPassword('');
        setSwitchError(null);
        onClose();
        console.log(`–£—Å–ø–µ—à–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç: ${switchingToAccount}`);
      } else {
        setSwitchError('–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞:', error);
      setSwitchError(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞');
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
  const handleLogout = () => {
    logout();
    onClose();
  };

  if (!isOpen) return null;

  // –§–∏–ª—å—Ç—Ä—É–µ–º –∞–∫–∫–∞—É–Ω—Ç—ã (—É–±–∏—Ä–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è)
  const otherAccounts = accounts.filter(acc => acc.username !== username);

  return (
    <>
      <div 
        ref={dropdownRef}
        className="account-dropdown"
        style={{
          position: 'fixed',
          top: position.top,
          left: position.right === undefined ? position.left : undefined,
          right: position.right,
          zIndex: 10000, // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–≤–µ–ª–∏—á–∏–ª–∏ z-index –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
          background: 'var(--white)',
          border: '1px solid var(--text-color)',
          borderRadius: '8px',
          boxShadow: '0 8px 24px rgba(0, 0, 0, 0.15)',
          minWidth: '280px',
          maxWidth: '320px',
          maxHeight: '80vh', // –î–û–ë–ê–í–õ–ï–ù–û: –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≤—ã—Å–æ—Ç—É
          overflowY: 'auto', // –î–û–ë–ê–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–æ–ª–ª –µ—Å–ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –ø–æ–º–µ—â–∞–µ—Ç—Å—è
          padding: '8px 0',
          animation: 'fadeIn 0.2s ease-out'
        }}
      >
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div style={{
          padding: '12px 16px',
          borderBottom: '1px solid var(--text-color)',
          fontSize: '14px',
          fontWeight: '600',
          color: 'var(--text-color)'
        }}>
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
        </div>

        {/* –¢–µ–∫—É—â–∏–π –∞–∫–∫–∞—É–Ω—Ç */}
        <div style={{
          padding: '12px 16px',
          background: 'var(--light-bg)',
          borderBottom: '1px solid var(--text-color)'
        }}>
          <div style={{ fontSize: '12px', color: 'var(--gray2-color)', marginBottom: '4px' }}>
            –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
          </div>
          <div style={{ 
            display: 'flex', 
            alignItems: 'center', 
            justifyContent: 'space-between' 
          }}>
            <div>
              <div style={{ fontWeight: '600', color: 'var(--text-color)' }}>
                {username}
              </div>
              <div style={{ fontSize: '12px', color: 'var(--gray2-color)' }}>
                {hasAdminRights ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
              </div>
            </div>
            <div style={{ fontSize: '16px' }}>
              {hasAdminRights ? 'üëë' : 'üë§'}
            </div>
          </div>
        </div>

        {/* –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ */}
        {switchingToAccount ? (
          <div style={{ padding: '16px' }}>
            <div style={{ marginBottom: '12px', fontSize: '14px', fontWeight: '500' }}>
              –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞: <strong>{switchingToAccount}</strong>
            </div>
            <div style={{ marginBottom: '12px' }}>
              <input
                type="password"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                value={switchPassword}
                onChange={(e) => setSwitchPassword(e.target.value)}
                style={{
                  width: '100%',
                  padding: '8px 12px',
                  border: '1px solid var(--text-color)',
                  borderRadius: '4px',
                  fontSize: '14px',
                  boxSizing: 'border-box'
                }}
                autoFocus
                onKeyPress={(e) => {
                  if (e.key === 'Enter') {
                    handleConfirmSwitch();
                  }
                }}
              />
            </div>
            {switchError && (
              <div style={{ 
                fontSize: '12px', 
                color: '#D3544A', 
                marginBottom: '12px' 
              }}>
                {switchError}
              </div>
            )}
            <div style={{ display: 'flex', gap: '8px' }}>
              <button
                onClick={handleCancelSwitching}
                style={{
                  flex: 1,
                  padding: '6px 12px',
                  border: '1px solid var(--text-color)',
                  background: 'transparent',
                  borderRadius: '4px',
                  fontSize: '12px',
                  cursor: 'pointer'
                }}
              >
                –û—Ç–º–µ–Ω–∞
              </button>
              <button
                onClick={handleConfirmSwitch}
                disabled={!switchPassword}
                style={{
                  flex: 1,
                  padding: '6px 12px',
                  border: '1px solid var(--primary-color)',
                  background: 'var(--primary-color)',
                  color: 'white',
                  borderRadius: '4px',
                  fontSize: '12px',
                  cursor: switchPassword ? 'pointer' : 'not-allowed',
                  opacity: switchPassword ? 1 : 0.6
                }}
              >
                –í–æ–π—Ç–∏
              </button>
            </div>
          </div>
        ) : (
          <>
            {/* –°–ø–∏—Å–æ–∫ –¥—Ä—É–≥–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ */}
            {otherAccounts.length > 0 && (
              <div>
                <div style={{
                  padding: '8px 16px',
                  fontSize: '12px',
                  color: 'var(--gray2-color)',
                  fontWeight: '500'
                }}>
                  –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞:
                </div>
                {otherAccounts.map(account => (
                  <div
                    key={account.id}
                    style={{
                      padding: '8px 16px',
                      cursor: 'pointer',
                      display: 'flex',
                      alignItems: 'center',
                      justifyContent: 'space-between',
                      transition: 'background-color 0.2s'
                    }}
                    onMouseEnter={(e) => {
                      e.currentTarget.style.background = 'var(--light-bg)';
                    }}
                    onMouseLeave={(e) => {
                      e.currentTarget.style.background = 'transparent';
                    }}
                    onClick={() => handleStartSwitching(account)}
                  >
                    <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>
                      <span style={{ fontSize: '14px' }}>
                        {account.isAdmin ? 'üëë' : 'üë§'}
                      </span>
                      <div>
                        <div style={{ fontSize: '14px', fontWeight: '500' }}>
                          {account.username}
                        </div>
                        <div style={{ fontSize: '11px', color: 'var(--gray2-color)' }}>
                          {account.isAdmin ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                        </div>
                      </div>
                    </div>
                    {hasAdminRights && (
                      <div style={{ display: 'flex', gap: '4px' }}>
                        <button
                          onClick={(e) => {
                            e.stopPropagation();
                            handleEditAccount(account);
                          }}
                          style={{
                            background: 'none',
                            border: 'none',
                            cursor: 'pointer',
                            padding: '4px',
                            borderRadius: '4px',
                            fontSize: '12px'
                          }}
                          title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"
                        >
                          ‚úé
                        </button>
                        <button
                          onClick={(e) => {
                            e.stopPropagation();
                            handleDeleteAccount(account);
                          }}
                          style={{
                            background: 'none',
                            border: 'none',
                            cursor: 'pointer',
                            padding: '4px',
                            borderRadius: '4px',
                            fontSize: '12px',
                            color: '#D3544A'
                          }}
                          title="–£–¥–∞–ª–∏—Ç—å"
                        >
                          √ó
                        </button>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )}

            {/* –î–µ–π—Å—Ç–≤–∏—è */}
            <div style={{ 
              borderTop: '1px solid var(--text-color)', 
              marginTop: '8px' 
            }}>
              {hasAdminRights && (
                <div
                  style={{
                    padding: '12px 16px',
                    cursor: 'pointer',
                    fontSize: '14px',
                    fontWeight: '500',
                    color: 'var(--primary-color)',
                    display: 'flex',
                    alignItems: 'center',
                    gap: '8px',
                    transition: 'background-color 0.2s'
                  }}
                  onMouseEnter={(e) => {
                    e.currentTarget.style.background = 'var(--light-bg)';
                  }}
                  onMouseLeave={(e) => {
                    e.currentTarget.style.background = 'transparent';
                  }}
                  onClick={handleCreateAccount}
                >
                  <span>+</span>
                  –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                </div>
              )}

              <div
                style={{
                  padding: '12px 16px',
                  cursor: 'pointer',
                  fontSize: '14px',
                  fontWeight: '500',
                  color: '#D3544A',
                  display: 'flex',
                  alignItems: 'center',
                  gap: '8px',
                  transition: 'background-color 0.2s'
                }}
                onMouseEnter={(e) => {
                  e.currentTarget.style.background = 'rgba(211, 84, 74, 0.1)';
                }}
                onMouseLeave={(e) => {
                  e.currentTarget.style.background = 'transparent';
                }}
                onClick={handleLogout}
              >
                <span>üö™</span>
                –í—ã–π—Ç–∏
              </div>
            </div>
          </>
        )}
      </div>

      {/* –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ç–µ–ø–µ—Ä—å —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –≤ –ø–æ—Ä—Ç–∞–ª–µ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
      {isAccountModalOpen && (
        <AccountModal
          isOpen={isAccountModalOpen}
          onClose={() => {
            setIsAccountModalOpen(false);
            setEditingAccount(null);
          }}
          editingAccount={editingAccount}
        />
      )}
    </>
  );
};

export default AccountDropdown;