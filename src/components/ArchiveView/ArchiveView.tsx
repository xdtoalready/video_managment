// src/components/ArchiveView/ArchiveView.tsx - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø

import React, { useState, useEffect } from 'react';
import { useStore } from '../../store/useStore.ts';
import ArchiveFilters from '../ArchiveFilters/ArchiveFilters.tsx';
import RecordingsList from '../RecordingsList/RecordingsList.tsx';
import ArchivePlayer from '../ArchivePlayer/ArchivePlayer.tsx';
import FooterPlayer from '../FooterPlayer/FooterPlayer.tsx';
import BookmarksPanel from '../BookmarksPanel/BookmarksPanel.tsx';
import EventsSearch from '../EventsSearch/EventsSearch.tsx';
import './ArchiveView.css';

const ArchiveView: React.FC = () => {
  const {
    archiveViewMode,
    activeRecording,
    loadRecordings,
    setArchiveViewMode,
    recordings,
    connectionStatus,
    archiveFilters
  } = useStore();

  const [showBookmarks, setShowBookmarks] = useState(false);
  const [showEventsSearch, setShowEventsSearch] = useState(false);
  const [isInitialLoad, setIsInitialLoad] = useState(true);

  // üî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–µ–π —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    const loadInitialData = async () => {
      console.log('üèõÔ∏è [ArchiveView] –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
      console.log('üèõÔ∏è [ArchiveView] –¢–µ–∫—É—â–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã:', {
        dateRange: {
          start: archiveFilters.dateRange.start.toISOString(),
          end: archiveFilters.dateRange.end.toISOString()
        },
        cameras: archiveFilters.cameras,
        locations: archiveFilters.locations
      });

      try {
        await loadRecordings();
        console.log('‚úÖ [ArchiveView] –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      } catch (error) {
        console.error('‚ùå [ArchiveView] –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      } finally {
        setIsInitialLoad(false);
      }
    };

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    if (isInitialLoad) {
      loadInitialData();
    }
  }, [loadRecordings, isInitialLoad]);

  // üî• –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  useEffect(() => {
    console.log('üèõÔ∏è [ArchiveView] –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ:', {
      archiveViewMode,
      recordingsCount: recordings.length,
      connectionStatus,
      activeRecordingId: activeRecording?.id,
      filtersState: {
        cameras: archiveFilters.cameras.length,
        locations: archiveFilters.locations.length
      }
    });
  }, [archiveViewMode, recordings, connectionStatus, activeRecording, archiveFilters]);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ –∑–∞–∫–ª–∞–¥–∫–∏ –∏–ª–∏ —Å–æ–±—ã—Ç–∏—è
  const handleTimeSelected = (time: Date) => {
    const videoElement = document.querySelector('.archive-player-video') as HTMLVideoElement;
    if (!videoElement || !activeRecording) return;

    // –í—ã—á–∏—Å–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤–Ω—É—Ç—Ä–∏ –∑–∞–ø–∏—Å–∏
    const localTime = (time.getTime() - activeRecording.startTime.getTime()) / 1000;
    if (localTime >= 0 && localTime <= videoElement.duration) {
      videoElement.currentTime = localTime;

      // –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–∞ –ø–∞—É–∑–µ, –∑–∞–ø—É—Å–∫–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
      if (videoElement.paused) {
        videoElement.play().catch(console.error);
      }
    } else {
      alert('–í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Ç–µ–∫—É—â–µ–π –∑–∞–ø–∏—Å–∏');
    }
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –∑–∞–∫–ª–∞–¥–æ–∫
  const toggleBookmarksPanel = () => {
    setShowBookmarks(prev => !prev);
    if (showEventsSearch) setShowEventsSearch(false);
  };

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –ø–æ–∏—Å–∫–∞ —Å–æ–±—ã—Ç–∏–π
  const toggleEventsSearch = () => {
    setShowEventsSearch(prev => !prev);
    if (showBookmarks) setShowBookmarks(false);
  };

  // –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–ª–∞–¥–∫–∏ –Ω–∞ —Ç–µ–∫—É—â–µ–º –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  const createBookmarkAtCurrentTime = () => {
    const videoElement = document.querySelector('.archive-player-video') as HTMLVideoElement;
    if (!videoElement || !activeRecording) return;

    const currentLocalTime = videoElement.currentTime;
    const globalTime = new Date(activeRecording.startTime.getTime() + currentLocalTime * 1000);

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–∫–ª–∞–¥–∫–∏
    const label = prompt('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–∫–ª–∞–¥–∫–∏:');
    if (!label) return;

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫–ª–∞–¥–∫—É —á–µ—Ä–µ–∑ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    const { addTimelineBookmark } = useStore.getState();
    addTimelineBookmark({
      monitorId: activeRecording.id,
      time: globalTime,
      label,
      color: '#ffcc00' // –¶–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    });

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–∫–ª–∞–¥–æ–∫, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ –≤–∏–¥–Ω–∞
    if (!showBookmarks) {
      setShowBookmarks(true);
      if (showEventsSearch) setShowEventsSearch(false);
    }
  };

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  const renderContent = () => {
    switch (archiveViewMode) {
      case 'single':
        // –ü—Ä–æ—Å–º–æ—Ç—Ä –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏
        if (!activeRecording) {
          console.warn('üèõÔ∏è [ArchiveView] –†–µ–∂–∏–º single, –Ω–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏');
          return (
            <div className="archive-single-view">
              <div className="archive-toolbar">
                <button className="back-button" onClick={() => setArchiveViewMode('list')}>
                  ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
                </button>
              </div>
              <div style={{ textAlign: 'center', padding: '40px' }}>
                <p>–ó–∞–ø–∏—Å—å –Ω–µ –≤—ã–±—Ä–∞–Ω–∞</p>
                <button onClick={() => setArchiveViewMode('list')}>
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É
                </button>
              </div>
            </div>
          );
        }

        console.log('üèõÔ∏è [ArchiveView] –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ single —Ä–µ–∂–∏–º–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏:', activeRecording.id);

        return (
          <div className="archive-single-view">
            <div className="archive-main-content">
              <div className="archive-player-container">
                <div className="archive-toolbar">
                  <button className="back-button" onClick={() => setArchiveViewMode('list')}>
                    ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
                  </button>
                  <div className="archive-tools">
                    <button
                      className={`tool-button ${showBookmarks ? 'active' : ''}`}
                      onClick={toggleBookmarksPanel}
                      title="–ó–∞–∫–ª–∞–¥–∫–∏"
                    >
                      –ó–∞–∫–ª–∞–¥–∫–∏
                    </button>
                    <button
                      className={`tool-button ${showEventsSearch ? 'active' : ''}`}
                      onClick={toggleEventsSearch}
                      title="–°–æ–±—ã—Ç–∏—è"
                    >
                      –°–æ–±—ã—Ç–∏—è
                    </button>
                    <button
                      className="tool-button"
                      onClick={createBookmarkAtCurrentTime}
                      title="–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É"
                    >
                      + –ó–∞–∫–ª–∞–¥–∫–∞
                    </button>
                  </div>
                </div>

                <h2 className="recording-title">
                  {activeRecording.monitorName} - {activeRecording.startTime.toLocaleString('ru-RU')}
                </h2>

                <ArchivePlayer recording={activeRecording} />
              </div>

              {showBookmarks && (
                <div className="archive-sidebar">
                  <BookmarksPanel onSelectBookmark={handleTimeSelected} />
                </div>
              )}

              {showEventsSearch && (
                <div className="archive-sidebar">
                  <EventsSearch onSelectEvent={handleTimeSelected} />
                </div>
              )}
            </div>
          </div>
        );

      case 'list':
      default:
        // –°–ø–∏—Å–æ–∫ –∑–∞–ø–∏—Å–µ–π
        console.log('üèõÔ∏è [ArchiveView] –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ list —Ä–µ–∂–∏–º–∞, –∑–∞–ø–∏—Å–µ–π –≤ store:', recordings.length);
        
        return (
          <>
            <ArchiveFilters />
            <RecordingsList />
          </>
        );
    }
  };

  // üî• –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  if (isInitialLoad) {
    return (
      <div className="archive-view-container">
        <div style={{ 
          display: 'flex', 
          flexDirection: 'column', 
          alignItems: 'center', 
          justifyContent: 'center', 
          height: '400px',
          textAlign: 'center'
        }}>
          <div className="loading-spinner" style={{ 
            width: '40px', 
            height: '40px', 
            border: '4px solid #f3f3f3',
            borderTop: '4px solid #3498db',
            borderRadius: '50%',
            animation: 'spin 1s linear infinite',
            marginBottom: '20px'
          }}></div>
          <h3>–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ä—Ö–∏–≤–∞...</h3>
          <p>–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
          <small style={{ color: '#666', marginTop: '10px' }}>
            –°—Ç–∞—Ç—É—Å: {connectionStatus} | –ó–∞–ø–∏—Å–µ–π: {recordings.length}
          </small>
        </div>
      </div>
    );
  }

  return (
    <div className="archive-view-container">
      {renderContent()}
      {archiveViewMode === 'single' && <FooterPlayer />}
    </div>
  );
};

export default ArchiveView;